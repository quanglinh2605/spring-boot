package com.demo.controller;

import java.util.List;

import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.util.MimeTypeUtils;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;

import com.demo.entities.Product;
import com.demo.model.ProductModel;

@RestController
@RequestMapping("api/product")
public class ProductRestController {
	@RequestMapping(value = "find", method = RequestMethod.GET, produces = MimeTypeUtils.APPLICATION_JSON_VALUE)
	public ResponseEntity<Product> find() {
		try {
			ProductModel productModel = new ProductModel();
			return new ResponseEntity<Product>(productModel.find(), HttpStatus.OK);
		} catch (Exception e) {
			return new ResponseEntity<Product>(HttpStatus.BAD_REQUEST);
		}
	}

	@RequestMapping(value = "findAll", method = RequestMethod.GET, produces = MimeTypeUtils.APPLICATION_JSON_VALUE)
	public ResponseEntity<List<Product>> findAll() {
		try {
			ProductModel productModel = new ProductModel();
			return new ResponseEntity<List<Product>>(productModel.findAll(), HttpStatus.OK);
		} catch (Exception e) {
			return new ResponseEntity<List<Product>>(HttpStatus.BAD_REQUEST);
		}
	}

	@RequestMapping(value = "findByStatus/{status}", method = RequestMethod.GET, produces = MimeTypeUtils.APPLICATION_JSON_VALUE)
	public ResponseEntity<List<Product>> findByStatus(@PathVariable("status") boolean status) {
		try {
			ProductModel productModel = new ProductModel();
			return new ResponseEntity<List<Product>>(productModel.findByStatus(status), HttpStatus.OK);
		} catch (Exception e) {
			return new ResponseEntity<List<Product>>(HttpStatus.BAD_REQUEST);
		}
	}

	@RequestMapping(value = "findByPrice/{price1}/{price2}", method = RequestMethod.GET, produces = MimeTypeUtils.APPLICATION_JSON_VALUE)
	public ResponseEntity<List<Product>> findByPrice(@PathVariable("price1") double price1,
			@PathVariable("price2") double price2) {
		try {
			ProductModel productModel = new ProductModel();
			return new ResponseEntity<List<Product>>(productModel.findByPrice(price1, price2), HttpStatus.OK);
		} catch (Exception e) {
			return new ResponseEntity<List<Product>>(HttpStatus.BAD_REQUEST);
		}
	}

	@RequestMapping(value = "findByName/{name}", method = RequestMethod.GET, produces = MimeTypeUtils.APPLICATION_JSON_VALUE)
	public ResponseEntity<List<Product>> findByPrice(@PathVariable("name") String name) {
		try {
			ProductModel productModel = new ProductModel();
			return new ResponseEntity<List<Product>>(productModel.findByName(name), HttpStatus.OK);
		} catch (Exception e) {
			return new ResponseEntity<List<Product>>(HttpStatus.BAD_REQUEST);
		}
	}

	@RequestMapping(value = "sum", method = RequestMethod.GET, produces = MimeTypeUtils.TEXT_PLAIN_VALUE)
	public ResponseEntity<String> sum() {
		try {
			ProductModel productModel = new ProductModel();
			return new ResponseEntity<String>(String.valueOf(productModel.Total()), HttpStatus.OK);
		} catch (Exception e) {
			return new ResponseEntity<String>(HttpStatus.BAD_REQUEST);
		}
	}

	@RequestMapping(value = "create", method = RequestMethod.POST, consumes = MimeTypeUtils.APPLICATION_JSON_VALUE, produces = MimeTypeUtils.APPLICATION_JSON_VALUE)
	public ResponseEntity<Product> create(@RequestBody Product product) {
		try {
			System.out.println("Create new product");
			System.out.println("id: " + product.getId());
			System.out.println("Name: " + product.getName());
			System.out.println("Price: " + product.getPrice());
			System.out.println("Status: " + product.isStatus());
			System.out.println("Quantity: " + product.getQuantity());
			product.setId("abc");
			return new ResponseEntity<Product>(product, HttpStatus.OK);
		} catch (Exception e) {
			return new ResponseEntity<Product>(HttpStatus.BAD_REQUEST);
		}
	}
}
